{
    "title": "Golang Basic Knowledge Test",
    "description": "Golang is a statically typed programming language with high performance, concurrency, and concise syntax.\nThis challenge is used to test the understanding of basic knowledge of Golang.\nThe challenge contains about 16 multiple-choice questions, which may have one or more answers. Please answer carefully.",
    "questions": [
        {
            "title": "What are the main features of the Go language?",
            "options": [
                "Static type language",
                "Automatic garbage collection",
                "Support for object-oriented programming",
                "Concurrent support"
            ]
        },
        {
            "title": "In the Go language, which keyword is used to define a function?",
            "options": ["func", "function", "def", "fun"]
        },
        {
            "title": "In the Go language, which keyword is used to define a constant?",
            "options": ["var", "let", "const", "constant"]
        },
        {
            "title": "In the Go language, which keyword is used to declare a new struct type?",
            "options": ["struct", "type", "new", "make"]
        },
        {
            "title": "In the Go language, which of the following are valid data types?",
            "options": ["float32", "uint", "string", "bool", "byte"]
        },
        {
            "title": "In the Go language, which of the following are valid loop structures?",
            "options": ["for", "while", "loop"]
        },
        {
            "title": "What is the range keyword used for in the Go language?",
            "options": [
                "Traverse arrays and slices",
                "Declare constants",
                "Control the number of loops",
                "Define functions"
            ]
        },
        {
            "title": "In the Go language, which function can remove an element from a slice at a specified position?",
            "options": [
                "remove(s, index)",
                "delete(s, index)",
                "append(s[:index], s[index+1:]...)",
                "pop(s, index)"
            ]
        },
        {
            "title": "Which option below is the correct way to declare and initialize a slice in the Go language?",
            "options": [
                "var s []int = [1, 2, 3]",
                "var s = [3]int{1, 2, 3}",
                "s := []int{1, 2, 3}",
                "s := [3]int{1, 2, 3}"
            ]
        },
        {
            "title": "What is the output order of the following code snippet?\n```golang\npackage main\n\nimport \"fmt\"\n\nfunc foo() {\n defer fmt.Println(1)\n defer fmt.Println(2)\n fmt.Println(3)\n}\n\nfunc main() {\n foo()\n defer fmt.Println(4)\n}\n```",
            "options": ["1 2 3 4", "3 2 1 4", "3 1 2 4", "1 3 2 4"]
        },
        {
            "title": "Regarding goroutines, which statement is correct?",
            "options": [
                "Both goroutines and threads can achieve concurrent execution of programs",
                "Threads are more lightweight than goroutines",
                "Goroutines do not have deadlock issues",
                "Use channels for communication between goroutines"
            ]
        },
        {
            "title": "The reference types in golang include",
            "options": ["slice", "map", "channel", "interface"]
        },
        {
            "title": "Regarding the init function, which statement is correct?",
            "options": [
                "A package can contain multiple init functions",
                "During program compilation, the init function of the imported package is executed first, and then the init function within the package is executed",
                "The main package cannot have an init function",
                "The init function can be called by other functions"
            ]
        },
        {
            "title": "Regarding memory leaks, which statement is correct?",
            "options": [
                "Golang has automatic garbage collection, so there are no memory leaks",
                "In Golang, the detection of memory leaks mainly relies on the pprof package",
                "Memory leaks can be detected during the compilation phase"
            ]
        },
        {
            "title": "Regarding string concatenation, which syntax is correct?",
            "options": [
                "str := 'abc' + '123'",
                "str := \"abc\" + \"123\"",
                "str := '123' + \"abc\"",
                "fmt.Sprintf(\"abc%d\", 123)"
            ]
        },
        {
            "title": "In Golang, which of the following are characteristics of channels?",
            "options": [
                "Channels are used for communication and data transfer between Goroutines.",
                "Channels can be closed to notify the receiving party that data transmission has ended.",
                "Channels can be used for both sending and receiving data.",
                "The capacity (buffer size) of channels can be dynamically adjusted."
            ]
        }
    ]
}